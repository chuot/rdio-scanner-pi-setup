#!/bin/bash

###############################################################################
# Copyright (C) 2019-2021 Chrystian Huot <chrystian.huot@saubeo.solutions>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
###############################################################################

USER=radio
PASSWORD=scanner
APIKEY=$(cat /proc/sys/kernel/random/uuid)

TRUNKRECORDER_TAG=v3.3.7

abort() {
	echo "Aborting!"

	exit 254
}

assert_os() {
	echo -n "### Checking operating system..."

	test -e /etc/os-release && source /etc/os-release

	if [ "$ID $VERSION" = "raspbian 10 (buster)" ]
		then
			echo " ok"
		else
			echo " failed"
			echo ""
			echo "This script will install all the Rdio Scanner components on a freshly installed Raspbian Buster"

			abort
	fi
}

assert_sudo() {
	echo -n "### Checking sudo capabilities..."

	if $(sudo -n true 2>/dev/null)
		then
			echo " ok"
		else
			echo " failed"
			echo ""
			echo "Unable to sudo without a password. Make sure that user $(whoami) has the appropriate sudoers permissions."

			abort
	fi
}

setup_fdkaac() {
	echo -n "### Checking fdkaac availability..."

	if [ -n "$(which fdkaac)" ]
		then
			echo " ok"
		else
			echo " installing..."

			test -e /usr/local/lib/libfdk-aac.a || {
				sudo -u $USER -i bash -c "
						test -d src/libfdk-aac || git clone https://github.com/mstorsjo/fdk-aac src/libfdk-aac;
						cd src/libfdk-aac;
						test -e configure || ./autogen.sh;
						test -e Makefile || ./configure;
						test -e libfdk-aac.la || make;
					" || abort

				sudo -s bash -c "cd /home/${USER}/src/libfdk-aac; make install; ldconfig" || abort
			}

			test -e /usr/local/bin/fdkaac || {
				sudo -u $USER -i bash -c "
						test -d src/fdkaac || git clone https://github.com/nu774/fdkaac.git src/fdkaac;
						cd src/fdkaac;
						test -e configure || autoreconf -i;
						test -e Makefile || ./configure;
						test -x fdkaac || make;
					" || abort

				sudo -s bash -c "cd /home/${USER}/src/fdkaac; make install" || abort
			}
	fi
}

setup_locale() {
	echo -n "### Checking system locales..."

	if $(grep -q "^en_US.UTF-8 UTF-8" /etc/locale.gen)
		then
			echo " ok"
		else
			echo " configuring..."

			sudo sed -e "s/^.*\(en_US.UTF-8 UTF-8\)$/\1/" -i /etc/locale.gen

			sudo locale-gen
	fi
}

setup_nginx() {
	echo -n "### Checking nginx availability..."

	if [ -d "/etc/nginx" ]
		then
			echo " ok"
		else
			echo " installing..."

			sudo apt install -y nginx || abort

			test -e /etc/nginx/sites-enabled/default && sudo rm -f /etc/nginx/sites-enabled/default

			sudo tee /etc/nginx/sites-available/rdio-scanner >/dev/null <<-EOT
				upstream rdio-scanner {
					server 127.0.0.1:3000;
				}

				server {
					listen 80 default_server;
					listen [::]:80 default_server;

					server_name _;

					location / {
						proxy_pass http://rdio-scanner;
						proxy_http_version 1.1;
						proxy_read_timeout 1d;
						proxy_set_header Upgrade \$http_upgrade;
						proxy_set_header Connection "upgrade";
						proxy_set_header Host \$host;
					}
				}
			EOT

			test -L /etc/nginx/sites-enabled/rdio-scanner || sudo ln -s /etc/nginx/sites-available/rdio-scanner /etc/nginx/sites-enabled/rdio-scanner

			sudo systemctl restart nginx
	fi
}

setup_nodejs() {
	echo -n "### Checking Node.js availability..."

	if [ -n "$(which node 2>/dev/null)" -a "$($(which node) -v)" \> "v14" ]
		then
			echo " ok"
		else
			echo " installing..."

			curl -sL https://deb.nodesource.com/setup_14.x | sudo bash -

			sudo apt install -y nodejs
	fi
}

setup_prerequisites() {
	pkgs="autoconf automake build-essential cmake ffmpeg git gnuradio gnuradio-dev gr-osmosdr libboost-all-dev libcurl4-openssl-dev libhackrf-dev libssl-dev libuhd-dev pkg-config sox sqlite3"

	echo -n "### Checking prerequisites..."

	if $(LC_ALL=C dpkg-query -f '${Status}\n' -W $pkgs 2>&1 | grep -q -e 'not-installed' -e 'no packages found matching')
		then
			echo " installing..."

			sudo apt install -y $pkgs

			sudo udevadm trigger
		else
			echo " ok"
	fi
}

setup_rdio_scanner() {
	clone() {
		echo -n "### Checking Rdio Scanner..."

		if [ -d "/home/${USER}/rdio-scanner" ]
			then
				echo " ok"
			else
				echo " installing..."

				sudo -u $USER -i git clone https://github.com/chuot/rdio-scanner.git || abort
		fi
	}

	backend_modules() {
		echo -n "### Checking Rdio Scanner backend modules..."

		if [ -d "/home/${USER}/rdio-scanner/server/node_modules" ]
			then
				echo " ok"
			else
				echo " installing..."

				sudo -u $USER -i bash -c "cd rdio-scanner/server && npm i" || abort
		fi
	}

	frontend_modules() {
		echo -n "### Checking Rdio Scanner frontend modules..."

		if [ -d "/home/${USER}/rdio-scanner/client/node_modules" ]
			then
				echo " ok"
			else
				echo " installing..."

				sudo -u $USER -i bash -c "cd rdio-scanner/client && NG_CLI_ANALYTICS=ci npm i" || abort
		fi
	}

	config() {
		echo -n "### Checking Rdio Scanner config..."

		if [ -e "/home/${USER}/rdio-scanner/server/config.json" ]
			then
				echo " ok"
			else
				echo " configuring..."

				sudo -u $USER tee /home/${USER}/rdio-scanner/server/config.json >/dev/null <<-EOT
					{
						"nodejs": {
							"env": "production",
							"host": "0.0.0.0",
							"port": 3000
						},
						"sequelize": {
							"dialect": "sqlite",
							"storage": "database.sqlite"
						},
						"rdioScanner": {
							"access": null,
							"apiKeys": [
								"$APIKEY"
							],
							"pruneDays": 7,
							"systems": [
								{
									"id": 11,
									"label": "RSP25MTL1",
									"talkgroups": [
										{
											"id": 54241,
											"label": "TDB A1",
											"name": "MRC TDB Fire Alpha 1",
											"tag": "Fire Dispatch",
											"group": "Fire"
										},
										{
											"id": 54242,
											"label": "TDB B1",
											"name": "MRC TDB Fire Bravo 1",
											"tag": "Fire Tac",
											"group": "Fire"
										},
										{
											"id": 54243,
											"label": "TDB B2",
											"name": "MRC TDB Fire Bravo 2",
											"tag": "Fire Tac",
											"group": "Fire"
										},
										{
											"id": 54248,
											"label": "TDB B3",
											"name": "MRC TDB Fire Bravo 3",
											"tag": "Fire Tac",
											"group": "Fire"
										},
										{
											"id": 54251,
											"label": "TDB B4",
											"name": "MRC TDB Fire Bravo 4",
											"tag": "Fire Tac",
											"group": "Fire"
										},
										{
											"id": 54261,
											"label": "TDB B5",
											"name": "MRC TDB Fire Bravo 5",
											"tag": "Fire Tac",
											"group": "Fire"
										},
										{
											"id": 54244,
											"label": "TDB B6",
											"name": "MRC TDB Fire Bravo 6",
											"tag": "Fire Tac",
											"group": "Fire"
										},
										{
											"id": 54129,
											"label": "TDB B7",
											"name": "MRC TDB Fire Bravo 7",
											"tag": "Fire Tac",
											"group": "Fire"
										},
										{
											"id": 54125,
											"label": "TDB B8",
											"name": "MRC TDB Fire Bravo 8",
											"tag": "Fire Tac",
											"group": "Fire"
										},
										{
											"id": 54005,
											"label": "2MT FD",
											"name": "MRC Deux-Montagnes Fire Dispatch",
											"tag": "Fire Dispatch",
											"group": "Fire"
										},
										{
											"id": 54004,
											"label": "NC INC GEN",
											"name": "North Crown Fire General",
											"tag": "Fire Tac",
											"group": "Fire"
										},
										{
											"id": 54124,
											"label": "BL INC GEN1",
											"name": "Blainville Fire General 1",
											"tag": "Fire Tac",
											"group": "Fire"
										},
										{
											"id": 54239,
											"label": "STE-ADP FD",
											"name": "Ste-Anne-des-Plaines Fire Dispatch",
											"tag": "Fire Dispatch",
											"group": "Fire"
										},
										{
											"id": 54200,
											"label": "SE INC ANN",
											"name": "St-Eustache Announcement",
											"tag": "Fire Dispatch",
											"group": "Fire"
										},
										{
											"id": 54201,
											"label": "SE INC GEN",
											"name": "St-Eustache General",
											"tag": "Fire Dispatch",
											"group": "Fire"
										},
										{
											"id": 54202,
											"label": "SE INC OP1",
											"name": "St-Eustache Operations",
											"tag": "Fire Tac",
											"group": "Fire"
										},
										{
											"id": 54203,
											"label": "SE INC PRV",
											"name": "St-Eustache Prevention",
											"tag": "Fire Talk",
											"group": "Fire"
										},
										{
											"id": 54206,
											"label": "SE CCU",
											"name": "St-Eustache Emergency",
											"tag": "Emergency Ops",
											"group": "Emergency"
										},
										{
											"id": 56201,
											"label": "DSURGEN",
											"name": "YUL Security Dispatch",
											"tag": "Security",
											"group": "Security"
										},
										{
											"id": 56202,
											"label": "DSURTAC",
											"name": "YUL Security Tactical",
											"tag": "Security",
											"group": "Security"
										},
										{
											"id": 56203,
											"label": "DSUROP",
											"name": "YUL Security Operations",
											"tag": "Security",
											"group": "Security"
										},
										{
											"id": 56211,
											"label": "DINCOPS",
											"name": "YUL Fire Dispatch",
											"tag": "Fire Dispatch",
											"group": "Fire"
										},
										{
											"id": 56212,
											"label": "DINCTAC",
											"name": "YUL Fire Dispatch",
											"tag": "Fire Tac",
											"group": "Fire"
										},
										{
											"id": 56218,
											"label": "DCCU",
											"name": "YUL CCU",
											"tag": "Emergency Ops",
											"group": "Emergency"
										},
										{
											"id": 56221,
											"label": "DBATIM",
											"name": "YUL Batiment",
											"tag": "Utility",
											"group": "Utility"
										},
										{
											"id": 56222,
											"label": "DSCHAMP",
											"name": "YUL SCHAMP",
											"tag": "Utility",
											"group": "Utility"
										},
										{
											"id": 56223,
											"label": "DFOULE",
											"name": "YUL Foule",
											"tag": "Utility",
											"group": "Utility"
										},
										{
											"id": 56224,
											"label": "DACCESS",
											"name": "YUL Access",
											"tag": "Utility",
											"group": "Utility"
										},
										{
											"id": 56225,
											"label": "DELECTR",
											"name": "YUL Electricity",
											"tag": "Utility",
											"group": "Utility"
										},
										{
											"id": 56226,
											"label": "DPISTE",
											"name": "YUL Piste",
											"tag": "Utility",
											"group": "Utility"
										},
										{
											"id": 56227,
											"label": "DTABLIER",
											"name": "YUL Tablier",
											"tag": "Utility",
											"group": "Utility"
										},
										{
											"id": 56228,
											"label": "DVTP",
											"name": "YUL VTP",
											"tag": "Utility",
											"group": "Utility"
										},
										{
											"id": 56229,
											"label": "DPONT",
											"name": "YUL Pont",
											"tag": "Utility",
											"group": "Utility"
										},
										{
											"id": 56232,
											"label": "DINSTALL",
											"name": "YUL Install",
											"tag": "Utility",
											"group": "Utility"
										},
										{
											"id": 56204,
											"label": "MSURGEN",
											"name": "YMX Security Dispatch",
											"tag": "Security",
											"group": "Security"
										},
										{
											"id": 56213,
											"label": "MINCOPS",
											"name": "YMX Fire Dispatch",
											"tag": "Fire Dispatch",
											"group": "Fire"
										},
										{
											"id": 56214,
											"label": "MINCTAC",
											"name": "YMX Fire Tactical",
											"tag": "Fire Tac",
											"group": "Fire"
										},
										{
											"id": 56219,
											"label": "MCCU",
											"name": "YMX CCU",
											"tag": "Emergency Ops",
											"group": "Emergency"
										},
										{
											"id": 56231,
											"label": "MPISTE",
											"name": "YMX Piste",
											"tag": "Utility",
											"group": "Utility"
										}
									],
									"units": [
										{
											"id": 4424001,
											"label": "CAUCA"
										}
									]
								},
								{
									"id": 15,
									"label": "RSP25MTL5",
									"talkgroups": [
										{
											"id": 54153,
											"label": "LA INC 1",
											"name": "L'Assomption Fire Dispatch",
											"tag": "Fire Dispatch",
											"group": "Fire"
										},
										{
											"id": 54171,
											"label": "MA INC 1",
											"name": "Mascouche Fire Dispatch",
											"tag": "Fire Dispatch",
											"group": "Fire"
										},
										{
											"id": 54141,
											"label": "RY INC 1",
											"name": "Repentigny Fire Dispatch 1",
											"tag": "Fire Dispatch",
											"group": "Fire"
										},
										{
											"id": 54142,
											"label": "RY INC 2",
													"name": "Repentigny Fire Operations",
											"tag": "Fire Tac",
											"group": "Fire"
										},
										{
											"id": 54143,
											"label": "RY INC SPE",
											"name": "Repentigny Fire Special",
											"tag": "Fire Tac",
											"group": "Fire"
										},
										{
											"id": 54144,
											"label": "RY INC PRV",
											"name": "Repentigny Fire Prevention",
											"tag": "Fire Talk",
											"group": "Fire"
										},
										{
											"id": 54145,
											"label": "RY CCU",
											"name": "Repentigny CCU",
											"tag": "Emergency Ops",
											"group": "Emergency"
										},
										{
											"id": 54231,
											"label": "TB INC 1",
											"name": "Terrebonne Fire Dispatch",
											"tag": "Fire Dispatch",
											"group": "Fire"
										},
										{
											"id": 54232,
											"label": "TB INC 2",
											"name": "Terrebonne Fire Operations",
											"tag": "Fire Tac",
											"group": "Fire"
										}
									],
									"units": [
										{
											"id": 4424001,
											"label": "CAUCA"
										}
									]
								}
							]
						}
					}
				EOT
		fi
	}

	build() {
		echo -n "### Checking Rdio Scanner frontend app..."

		if [ -d "/home/${USER}/rdio-scanner/client/dist" ]
			then
				echo " ok"
			else
				echo " building..."

				sudo -u $USER -i bash -c "cd rdio-scanner/client && npm run build" || abort
		fi
	}

	systemd_service() {
		echo -n "### Checking Rdio Scanner server systemd service..."

		if [ -e "/etc/systemd/system/rdio-scanner.service" ]
			then
				echo " ok"
			else
				echo " configuring..."

				sudo tee /etc/systemd/system/rdio-scanner.service >/dev/null <<-EOT
					[Unit]
					Description=Rdio Scanner
					After=network.target

					[Service]
					User=$USER
					Group=$USER
					WorkingDirectory=/home/${USER}/rdio-scanner/server
					ExecStart=/usr/bin/node index.js
					Restart=always

					[Install]
					WantedBy=multi-user.target
				EOT

				sudo systemctl daemon-reload
		fi
	}

	systemd_timer() {
		echo -n "### Checking Rdio Scanner server systemd timer..."

		if [ -e "/etc/systemd/system/rdio-scanner.timer" ]
			then
				echo " ok"
			else
				echo " configuring..."

				sudo tee /etc/systemd/system/rdio-scanner.timer >/dev/null <<-EOT
					[Unit]
					Description=Runs rdio-scanner.service 60 seconds after boot up

					[Timer]
					OnBootSec=60s
					Unit=rdio-scanner.service

					[Install]
					WantedBy=multi-user.target
				EOT

				sudo systemctl daemon-reload

				sudo systemctl enable rdio-scanner.timer
		fi
	}

	clone
	backend_modules
	frontend_modules
	config
	build
	systemd_service
	systemd_timer
}

setup_swap() {
	echo -n "### Checking swap size..."

	if [ $(free | awk '/Swap:/{ print $2 }') -ge 1048572 ]
		then
			echo " ok"
		else
			echo " resizing..."

			sudo dphys-swapfile swapoff

			sudo sed -e 's/^.*CONF_SWAPSIZE=.*$/CONF_SWAPSIZE=1024/' -i /etc/dphys-swapfile

			sudo dphys-swapfile setup

			sudo dphys-swapfile swapon
	fi
}

setup_trunk_recorder() {
	clone() {
		echo -n "### Checking Trunk Recorder..."

		if [ -d "/home/${USER}/src/trunk-recorder" ]
			then
				echo " ok"
			else
				echo " installing..."

				test -d /home/${USER}/src || sudo -u ${USER} -i mkdir src

				sudo -u $USER -i bash -c "cd src && git clone https://github.com/robotastic/trunk-recorder.git" || abort
		fi
	}

	configure() {
		echo -n "### Checking Trunk Recorder Makefile..."

		if [ -e "/home/${USER}/src/trunk-recorder/Makefile" ]
			then
				echo " ok"
			else
				echo " configuring..."
				sudo -u $USER -i bash -c "cd src/trunk-recorder && git checkout ${TRUNKRECORDER_TAG} && cmake ." || abort
		fi
	}

	build() {
		echo -n "### Checking Trunk Recorder build..."

		if [ -x "/home/${USER}/src/trunk-recorder/recorder" ]
			then
				echo " ok"
			else
				echo " compiling..."
				sudo -u $USER -i bash -c "cd src/trunk-recorder && make" || abort
		fi
	}

	install() {
		echo -n "### Checking Trunk Recorder installation..."

		if [ -e "/home/${USER}/trunk-recorder/recorder" ]
			then
				echo " ok"
			else
				echo " installing..."

				test -d "/home/${USER}/trunk-recorder" || sudo -u $USER -i mkdir trunk-recorder

				test -x "/home/${USER}/src/trunk-recorder/recorder" && sudo -u $USER -i bash -c "cp src/trunk-recorder/recorder trunk-recorder"
		fi
	}

	scripts() {
		echo -n "### Checking Trunk Recorder scripts..."

		if [ -d "/home/${USER}/trunk-recorder/scripts" ]
			then
				echo " ok"
			else
				echo " configuring..."

				sudo -u $USER -i mkdir trunk-recorder/scripts

				sudo -u $USER tee "/home/${USER}/trunk-recorder/scripts/upload-call" >/dev/null <<-EOT
					#!/bin/bash

					basename="\${2%.*}"

					curl -s http://127.0.0.1:3000/api/trunk-recorder-call-upload \\
						-F "key=${APIKEY}" \\
						-F "system=\${1:-0}" \\
						-F "audio=@\${basename}.wav;type=audio/wav" \\
						-F "meta=@\${basename}.json;type=application/json"

					rm -f \${basename}.*
				EOT

				sudo -u $USER -i bash -c "chmod a+x trunk-recorder/scripts/*"
		fi
	}

	talkgroups() {
		echo -n "### Checking Trunk Recorder talkgroups..."

		if [ -d "/home/${USER}/trunk-recorder/talkgroups" ]
			then
				echo " ok"
			else
				echo " configuring..."

				sudo -u $USER -i mkdir trunk-recorder/talkgroups

				sudo -u ${USER} tee "/home/${USER}/trunk-recorder/talkgroups/RSP25MTL1.csv" >/dev/null <<-EOT
					54241,d3e1,D,ALPHA 1,MRC TDB Fire Alpha 1,Fire Dispatch,FIRE DISPATCH,1
					54242,d3e2,D,BRAVO 1,MRC TDB Fire Bravo 1,Fire Tac,FIRE TAC,1
					54243,d3e3,D,BRAVO 2,MRC TDB Fire Bravo 2,Fire Tac,FIRE TAC,1
					54248,d3e8,D,BRAVO 3,MRC TDB Fire Bravo 3,Fire Tac,FIRE TAC,1
					54251,d3eb,D,BRAVO 4,MRC TDB Fire Bravo 4,Fire Tac,FIRE TAC,1
					54261,d3f5,D,BRAVO 5,MRC TDB Fire Bravo 5,Fire Tac,FIRE TAC,1
					54244,d3e4,D,BRAVO 6,MRC TDB Fire Bravo 6,Fire Tac,FIRE TAC,1
					54129,d371,D,BRAVO 7,MRC TDB Fire Bravo 7,Fire Tac,FIRE TAC,1
					54125,d36d,D,BRAVO 8,MRC TDB Fire Bravo 8,Fire Tac,FIRE TAC,1
					54005,d2f5,D,D-M FD,Deux-Montagnes Fire Dispatch,Fire Dispatch,FIRE DISPATCH,1
					54239,d3df,D,SADP FD,Ste-Anne-des-Plaines Fire Dispatch,Fire Dispatch,FIRE DISPATCH,1
					56201,db89,D,DSURGEN,YUL Security Dispatch,Security,SECURITY,2
					56202,db8a,D,DSURTAC,YUL Security Tactical,Security,SECURITY,2
					56203,db8b,D,DSUROP,YUL Security Operations,Security,SECURITY,2
					56211,db93,D,DINCOPS,YUL Fire Dispatch,Fire Dispatch,FIRE DISPATCH,1
					56212,db94,D,DINCTAC,YUL Tactical,Fire Tac,FIRE TAC,1
					56218,db9a,D,DCCU,YUL CCU,Mesure d'urgence,EMERGENCY,3
					56221,db9d,D,DBATIM,YUL Batiment,Utilities,UTILITY,3
					56222,db9e,D,DSCHAMP,YUL SCHAMP,Utilities,UTILITY,3
					56223,db9f,D,DFOULE,YUL Foule,Utilities,UTILITY,3
					56224,dba0,D,DACCES,YUL Acces,Utilities,UTILITY,3
					56225,dba1,D,DELECTR,YUL Electricity,Utilities,UTILITY,3
					56226,dba2,D,DPISTE,YUL Piste,Utilities,UTILITY,3
					56227,dba3,D,DTABLIER,YUL Tablier,Utilities,UTILITY,3
					56228,dba4,D,DVTP,YUL VTP,Utilities,UTILITY,3
					56229,dba5,D,DPONT,YUL Pont,Utilities,UTILITY,3
					56232,dba8,D,DINSTALL,YUL Install,Utilities,UTILITY,3
					56204,db8c,D,MSURGEN,YMX Security Dispatch,Security,SECURITY,3
					56213,db95,D,MINCOPS,YMX Fire Dispatch,Fire Dispatch,FIRE DISPATCH,1
					56214,db96,D,MINCTAC,YMX Fire Tactical,Fire Tac,FIRE TAC,1
					56219,db9b,D,MCCU,YMX CCU,Mesure d'urgence,EMERGENCY,3
					56231,dba7,D,MPISTE,YMX PISTE,Utilities,UTILITY,3
				EOT

				sudo -u ${USER} tee "/home/${USER}/trunk-recorder/talkgroups/RSP25MTL5.csv" >/dev/null <<-EOT
					54153,d389,D,ASSOMP FD,L'Assomption Fire Dispatch,Fire Dispatch,FIRE DISPATCH,1
					54171,d39b,D,MASCOU FD,Mascouche Fire Dispatch,Fire Dispatch,FIRE DISPATCH,1
					54141,d37d,D,REPENT FD1,Repentigny Fire Dispatch 1,Fire Dispatch,FIRE DISPATCH,1
					54142,d37e,D,REPENT FD2,Repentigny Fire Dispatch 2,Fire Tac,FIRE TAC,1
					54143,d37f,D,REPENT FO,Repentigny Fire Operations,Fire Tac ,FIRE TAC,1
					54144,d380,D,REPENT FP,Repentigny Fire Prevention,Fire Talk,FIRE TALK,1
					54145,d381,D,REPENT EM,Repentigny Emergency Measure,Emergency,EMERGENCY,1
					54231,d3d7,D,TERREB FD,Terrebonne Fire Dispatch,Fire Dispatch,FIRE DISPATCH,1
					54232,d3d8,D,TERREB FO,Terrebonne Fire Operations,Fire Tac,FIRE TAC,1
				EOT

				sudo -u $USER -i bash -c "cd trunk-recorder; ./scripts/upload-systems"
		fi
	}

	config() {
		echo -n "### Checking Trunk Recorder configuration..."

		if [ -e "/home/${USER}/trunk-recorder/config.json" ]
			then
				echo " ok"
			else
				echo " configuring..."

				sudo -u $USER tee "/home/${USER}/trunk-recorder/config.json" >/dev/null <<-EOT
					{
						"callTimeout": 5,
						"captureDir": "/tmp/${USER}",
						"frequencyFormat": "mhz",
						"sources": [
							{
								"center": 773031250,
								"device": "rtl=00000001",
								"digitalRecorders": 6,
								"driver": "osmosdr",
								"error": 0,
								"gain": 36.4,
								"rate": 2400000
							}
						],
						"systems": [
							{
								"audioArchive": false,
								"control_channels": [
									772031250,
									772281250,
									772531250,
									772781250,
									773281250,
									773531250,
									773781250,
									774031250
								],
								"hideEncrypted": true,
								"hideUnknownTalkgroups": true,
								"modulation": "qpsk",
								"recordUnknown": false,
								"shortName": "RSP25MTL1",
								"talkgroupsFile": "talkgroups/RSP25MTL1.csv",
								"type": "p25",
								"uploadScript": "scripts/upload-call 1"
							},
							{
								"audioArchive": false,
								"control_channels": [
									772556250,
									772306250,
									772806250,
									773306250,
									773556250,
									773806250
								],
								"hideEncrypted": true,
								"hideUnknownTalkgroups": true,
								"modulation": "qpsk",
								"recordUnknown": false,
								"shortName": "RSP25MTL5",
								"talkgroupsFile": "talkgroups/RSP25MTL5.csv",
								"type": "p25",
								"uploadScript": "scripts/upload-call 5"
							}
						],
						"ver": 3
					}
				EOT
		fi
	}

	volk_profile() {
		echo -n "### Checking Trunk Recorder volk profile..."

		if [ -e "/home/${USER}/.volk/volk_config" ]
			then
				echo " ok"
			else
				echo " configuring..."

				sudo -u $USER -i volk_profile
		fi
	}

	systemd_service() {
		echo -n "### Checking Trunk Recorder server systemd service..."

		if [ -e "/etc/systemd/system/trunk-recorder.service" ]
			then
				echo " ok"
			else
				echo " configuring..."

				sudo tee /etc/systemd/system/trunk-recorder.service >/dev/null <<-EOT
					[Unit]
					Description=Trunk-Recorder

					[Service]
					User=$USER
					Group=$USER
					Environment=LC_ALL=en_US.utf8
					WorkingDirectory=/home/${USER}/trunk-recorder
					ExecStart=/home/${USER}/trunk-recorder/recorder
					Restart=always

					[Install]
					WantedBy=multi-user.target
				EOT

				sudo systemctl daemon-reload

				sudo systemctl start trunk-recorder.service
		fi
	}

	systemd_timer() {
		echo -n "### Checking Trunk Recorder server systemd timer..."

		if [ -e "/etc/systemd/system/trunk-recorder.timer" ]
			then
				echo " ok"
			else
				echo " configuring..."

				sudo tee /etc/systemd/system/trunk-recorder.timer >/dev/null <<-EOT
					[Unit]
					Description=Runs trunk-recorder.service 30 seconds after boot up

					[Timer]
					OnBootSec=30s
					Unit=trunk-recorder.service

					[Install]
					WantedBy=multi-user.target
				EOT

				sudo systemctl daemon-reload

				sudo systemctl enable trunk-recorder.timer
		fi
	}

	clone
	configure
	build
	install
	scripts
	config
	volk_profile
	systemd_service
	systemd_timer
}

setup_user() {
	echo -n "### Checking user \"${USER}\"..."

	if [ -n "$(id $USER 2>/dev/null)" ]
		then
			echo " ok"
		else
			echo " adding..."

			sudo useradd -G adm,audio,cdrom,dialout,games,gpio,i2c,input,netdev,plugdev,spi,sudo,users,video \
				-m -p $(echo $PASSWORD | openssl passwd -1 -stdin) -U $USER &&
				echo "User $USER created with default password \"${PASSWORD}\" (remember to change it)"

			echo -e "\nexport NODE_OPTIONS=--max-old-space-size=1024" | sudo tee -a "/home/${USER}/.profile" >/dev/null

			echo "$USER ALL=(ALL) NOPASSWD: ALL" | sudo tee "/etc/sudoers.d/010_${USER}-nopasswd" >/dev/null &&
				echo "Configure no password sudoers privileges for user $USER"

			sudo chmod 440 /etc/sudoers.d/010_${USER}-nopasswd
	fi
}

start_services() {
	echo -n "### Starting services..."

	sudo systemctl start trunk-recorder.service

	sleep 10;

	sudo systemctl start rdio-scanner.service

	echo " started"
}

deprecated() {
	cat <<-EOF
	!!! IMPORTANT NOTICE !!!

	This installation script is no longer relevant as of Rdio Scanner v6.0.

	You can now easily install your own instance of Rdio Scanner from a single executable file.
	Refer to the PDF document supplied with the executable at https://github.com/chuot/rdio-scanner/releases.

	EOF

	exit 0
}

deprecated

assert_os
assert_sudo
setup_swap
setup_locale
setup_nodejs
setup_prerequisites
setup_user
setup_rdio_scanner
setup_nginx
setup_fdkaac
setup_trunk_recorder
start_services

cat <<-EOT
	###
	### The installation is now done!
	###
	### You can access Rdio Scanner at $(ip -4 -br addr | awk '/UP/ { gsub(/\/.*/, ""); print "http://"$3}')
	###
	### Remember to change ${USER}'s password from the default, which is "${PASSWORD}"
	###
EOT
